{"version":3,"sources":["/ts/app.cfg.ts"],"names":[],"mappings":";;;;AACA,uCAAoC;AAapC,IAAI,GAAG,GAAY;IAClB,SAAS,EAAE,aAAK,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;IACrF,WAAW,EAAE,KAAK;IAClB,SAAS,EAAE,aAAK,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,qBAAqB,CAAC;IACtG,OAAO,EAAE,gBAAgB;CACzB,CAAC;AAEF,GAAG,CAAC,mBAAmB,GAAG;IACzB,IAAI,KAAK,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;IACpC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9B,KAAK,GAAG,aAAa,GAAG,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrE,GAAG,IAAI,KAAK,CAAC;IACd,CAAC;IACD,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;AAChC,CAAC,CAAC;AAGF,IAAM,gBAAgB,GAAG;IACxB,WAAW,EAAE,SAAS;IACtB,gBAAgB,EAAE,MAAM;IACxB,aAAa,EAAE,MAAM;IACrB,gBAAgB,EAAE,MAAM;IACxB,eAAe,EAAE,MAAM;IACvB,YAAY,EAAE,UAAU;IACxB,iBAAiB,EAAE,WAAW;CAC9B,CAAC;AAGF,GAAG,CAAC,aAAa,GAAG,UAAU,IAAY,EAAG,QAAkC,EAAE,QAAkB;IAAtD,qDAAkC;IAE9E,EAAE,CAAC,CAAC,IAAI,KAAK,GAAG,IAAI,QAAQ,CAAC,QAAQ,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;QACxD,GAAG,CAAC,mBAAmB,EAAE,CAAC;IAC3B,CAAC;IACD,IAAI,EAAC;QACJ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,SAAO,IAAI,CAAC,IAAI,eAAU,IAAI,UAAK,QAAQ,MAAG,CAAC,CAAC;IAC7D,CAAC;AAEF,CAAC,CAAC;AAGF,kBAAe,GAAG,CAAC","file":"app.cfg.js","sourcesContent":["import opg from \"./opg\";\r\nimport {store} from 'ts/util/store';\r\n\r\n//Store.use('sessionStorage');\r\n\r\ninterface IConfig {\r\n\tapiServer: string ;\r\n\tajaxTimeOut: number;\r\n\tloginPage: string;\r\n\tversion: string;\r\n\tonServerError?: Function;\r\n\tonUnauthorizedError?:Function;\r\n}\r\n\r\nlet cfg: IConfig = {\r\n\tapiServer: store.get('apiServer') || (window.CONFIG ? window.CONFIG.apiServer : null),\r\n\tajaxTimeOut: 30000,\r\n\tloginPage: store.get('loginPage') || (window.CONFIG ? window.CONFIG.loginPage : '../login/index.html'),\r\n\tversion: '1.0.2_20170908',\r\n};\r\n\r\ncfg.onUnauthorizedError = function () {\r\n\tlet param = '', url = cfg.loginPage;\r\n\tif (top.window.location.hash) {\r\n\t\tparam = '?ReturnUrl=' + encodeURIComponent(top.window.location.hash);\r\n\t\turl += param;\r\n\t}\r\n\ttop.window.location.href = url;\r\n};\r\n\r\n\r\nconst globalErrorCodes = {\r\n\t'exception': '服务器内部错误',\r\n\t'delete_failure': '删除失败',\r\n\t'add_failure': '新增失败',\r\n\t'update_failure': '更新失败',\r\n\t'query_failure': '查询失败',\r\n\t'max_length': '输入超出最大长度',\r\n\t'token_exception': 'token验证失败',\r\n};\r\n\r\n\r\ncfg.onServerError = function (code :number , errorMsg: string = 'unknown error', callback?:Function) {\r\n\r\n\tif (code === 401 && location.pathname != cfg.loginPage) {\r\n\t\tcfg.onUnauthorizedError();\r\n\t}\r\n\telse{\r\n\t\ttop.opg.err(`api.${this.name} error ${code} (${errorMsg})`);\r\n\t}\r\n\r\n};\r\n\r\n\r\nexport default cfg;\r\n\r\n\r\n"]}