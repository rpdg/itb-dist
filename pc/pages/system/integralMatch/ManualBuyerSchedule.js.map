{"version":3,"sources":["/pages/system/integralMatch/ManualBuyerSchedule.ts"],"names":[],"mappings":"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","file":"ManualBuyerSchedule.js","sourcesContent":["import {api} from \"/ts/util/api\";\r\nimport opg from \"/ts/opg\";\r\nimport Table from \"/ts/ui/Table\";\r\nimport PopUp from \"../../../ts/ui/Popup\";\r\nimport {format} from \"../../../ts/util/utils\";\r\n\r\napi({\r\n    getExhibitionByBarCode: 'exhibition/getExhibitionByBarCode',\r\n    'maunalAddBuyerSchedule!post': 'schedule/MaunalAddBuyerSchedule'\r\n});\r\n\r\n\r\nexport default class ManualBuyerSchedule {\r\n    constructor(lng) {\r\n\r\n        opg.wrapPanel('#formBuyerSchedule', {\r\n            title: ``,\r\n            btnSearchText: `${lng.calc}`,\r\n            btnSearchClick: () => {\r\n                let param = $('#formBuyerSchedule').fieldsToJson();\r\n                if (param.barcode && param.name && exhibitions.length) {\r\n                    let exhibitionsBarCode = [];\r\n                    exhibitions.forEach(item => {\r\n                        exhibitionsBarCode.push(item.barcode)\r\n                    });\r\n                    api.maunalAddBuyerSchedule({\r\n                        barcode: param.barcode,\r\n                        addCount: param.name,\r\n                        exhibitions: exhibitionsBarCode\r\n                    }, (data) => {\r\n                        opg.ok('ok');\r\n                        $('#formBuyerSchedule').jsonToFields({\r\n                            barcode: '', name: '', exBarcode: ''\r\n                        });\r\n                        exhibitions = [];\r\n                        tb.update(exhibitions);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        let exhibitions = [];\r\n\r\n        let exBarcode = opg('#exBarcode').jq;\r\n        opg('#btnExBarCode').jq.on('click', function () {\r\n            if (exBarcode.val()) {\r\n                let barcode = exBarcode.val();\r\n                api.getExhibitionByBarCode({barcode}, (data) => {\r\n                    if (data.length) {\r\n                        data.forEach(item => {\r\n                            let itemBarcode = item.barcode;\r\n                            let flag = false;\r\n                            for (let i = 0; i < exhibitions.length; i++) {\r\n                                let eItem = exhibitions[i];\r\n                                if (eItem.barcode == itemBarcode) {\r\n                                    flag = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!flag) {\r\n                                exhibitions.push(item);\r\n                            }\r\n                        });\r\n                        tb.update(exhibitions);\r\n                        $('#exBarcode').val('');\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        let tb: Table = opg('#tbExhibitions').table({\r\n            data: exhibitions,\r\n            columns: [\r\n                {\r\n                    text: `${lng.barcode}`,\r\n                    src: 'barcode',\r\n                    width: 100\r\n                },\r\n                {\r\n                    text: `${lng.name}`,\r\n                    width: 100,\r\n                    render: function (id, index, row) {\r\n                        if (row.company_cn && row.company) {\r\n                            return `${row.company_cn}(${row.company})`;\r\n                        } else if (row.company) {\r\n                            return row.company;\r\n                        } else {\r\n                            return row.company_cn;\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: lng.process,\r\n                    width: 250,\r\n                    render: (id, index, row) => {\r\n                        return `<button data-id=\"${row.barcode}\" data-index=\"${row[':index']}\" class=\"btn-mini btn-danger btnDelete\">${lng.delete}</button> `;\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        tb.tbody.on('click', '.btnDelete', function (e) {\r\n            let barcode = e.target.getAttribute('data-id');\r\n            let deleteIndexs = [];\r\n            exhibitions.forEach((item, index) => {\r\n                let itemBarcode = item.barcode;\r\n                if (itemBarcode == barcode) {\r\n                    deleteIndexs.push(index)\r\n                }\r\n            });\r\n            deleteIndexs.forEach(i => {\r\n                exhibitions.splice(i, 1);\r\n            });\r\n            tb.update(exhibitions);\r\n        });\r\n\r\n    }\r\n}"]}