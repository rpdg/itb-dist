{"version":3,"sources":["/pages/system/integralMatch/QualifyDate.ts"],"names":[],"mappings":"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","file":"QualifyDate.js","sourcesContent":["import {api} from \"/ts/util/api\";\r\nimport opg from \"/ts/opg\";\r\nimport Table from \"/ts/ui/Table\";\r\nimport PopUp from \"../../../ts/ui/Popup\";\r\nimport {format} from \"../../../ts/util/utils\";\r\n\r\napi({\r\n    queryQualifyDate: 'qualifydate/QueryQualifyDate',\r\n    queryQualifyDateInfoByBarcode: 'qualifydate/QueryQualifyDateInfoByBarcode',\r\n    'import!UPLOAD': 'qualifydate/import',\r\n    delQualifyDateById: 'qualifydate/DelQualifyDateById',\r\n    export:'qualifydate/export'\r\n});\r\n\r\n\r\nexport default class QualifyDate {\r\n    constructor(lng) {\r\n        window.importQualifyDate = function () {\r\n            let fileIpt: HTMLInputElement = <HTMLInputElement> document.getElementById('files');\r\n            let files: FileList = fileIpt.files;\r\n            if (files.length > 0) {\r\n                let formData = new FormData();\r\n                for (let i = 0; i < files.length; i++) {\r\n                    formData.append('file_' + i, files[i]);\r\n                }\r\n                api.import(formData, function (data) {\r\n                    fileIpt.value = '';\r\n                    let msg = `${lng.importmsg}`;\r\n                    let ok = data.ok, error = data.error;\r\n                    if (ok && ok.length) {\r\n                        //msg += ok.join(',');\r\n                    }\r\n                    if (error && error.length) {\r\n                        msg += error.join(',');\r\n                    }\r\n                    opg.ok(msg);\r\n                    tb.update();\r\n                });\r\n            }\r\n        };\r\n\r\n        opg.wrapPanel('#formQualifyDate', {\r\n            title: ``,\r\n            btnSearchText: `${lng.search}`,\r\n            btnSearchClick: function () {\r\n                tb.update({\r\n                    'barcode': barCode.jq.val(),\r\n                    'keyword': name.jq.val(),\r\n                    'sort': getDefaultSort()\r\n                });\r\n            },\r\n        }).addToFoot(`<input type=\"file\" name=\"file\" id=\"files\" class=\"btn-export\"><button class=\"btn-primary btn-small btn-export\" onclick=\"window.importQualifyDate();\">${lng.qualifyDateImport}</button><a href=\"${api.export}\" target=\"_blank\" class=\"btn-export\">template</a>`);\r\n\r\n\r\n        let barCode = opg('#barcode4'),\r\n            name = opg('#name4');\r\n\r\n        let tb: Table = opg('#tbQualifyDate').table({\r\n            api: api.queryQualifyDate,\r\n            param: {\r\n                'barcode': barCode.jq.val(),\r\n                'keyword': name.jq.val()\r\n            },\r\n            columns: [\r\n                {\r\n                    text: `${lng.barcode}`,\r\n                    src: 'barcode',\r\n                    width: 150,\r\n                },\r\n                {\r\n                    text: `${lng.name}`,\r\n                    src: 'name',\r\n                    width: 150,\r\n                },\r\n                {\r\n                    text: `${lng.company}`,\r\n                    src: 'company',\r\n                },\r\n                {\r\n                    text: `${lng.rowcount}`,\r\n                    src: 'rowcount',\r\n                    width: 150,\r\n                },\r\n                {\r\n                    text: lng.process,\r\n                    src: 'id',\r\n                    width: 120,\r\n                    render: (id, index, row) => {\r\n                        return `<button data-barcode=\"${row.barcode}\" data-index=\"${row[':index']}\" class=\"btn-mini btn-info btnDetail\">${lng.viewDetail}</button>  `;\r\n                    },\r\n                },\r\n            ]\r\n        });\r\n\r\n        tb.tbody.on('click', '.btnDetail', function (e) {\r\n            let $tb = $('<table></table>');\r\n\t        let $divTb = $('<div style=\"height: 353px; overflow-x: hidden; overflow-y: auto;\"></div>').append($tb);\r\n\r\n            opg.popTop($divTb, {\r\n                title: lng.viewDetail,\r\n                width: 700,\r\n                height: 400\r\n            });\r\n\r\n            let tb: Table = opg($tb).table({\r\n                api: api.queryQualifyDateInfoByBarcode,\r\n                param: {\r\n                    barcode: e.target.getAttribute('data-barcode')\r\n                },\r\n                columns: [\r\n                    {\r\n                        text: `${lng.barcode}`,\r\n                        src: 'barcode',\r\n                        width: 120,\r\n                    },\r\n                    {\r\n                        text: `${lng.beginDate}`,\r\n                        src: 'begindate',\r\n                    },\r\n                    {\r\n                        text: `${lng.endDate}`,\r\n                        src: 'enddate',\r\n                    },\r\n                    {\r\n                        text: lng.process,\r\n                        src: 'id',\r\n                        width: 120,\r\n                        render: (id, index, row) => {\r\n                            return `<button data-id=\"${row.id}\" data-index=\"${row[':index']}\" class=\"btn-mini btn-info btnDetail\">${lng.delQualifyDate}</button>  `;\r\n                        },\r\n                    }\r\n                ]\r\n            });\r\n\r\n\r\n            tb.tbody.on('click', '.btnDetail', function (e) {\r\n                let id = e.target.getAttribute('data-id');\r\n                api.delQualifyDateById({id}, (data) => {\r\n                    tb.update()\r\n                });\r\n            });\r\n        });\r\n\r\n    }\r\n}"]}