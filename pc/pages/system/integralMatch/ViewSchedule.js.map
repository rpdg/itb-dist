{"version":3,"sources":["/pages/system/integralMatch/ViewSchedule.ts"],"names":[],"mappings":"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","file":"ViewSchedule.js","sourcesContent":["import {api} from \"/ts/util/api\";\r\nimport opg from \"/ts/opg\";\r\nimport Table from \"/ts/ui/Table\";\r\nimport PopUp from \"../../../ts/ui/Popup\";\r\n\r\napi({\r\n    getBuyerScheduleForBack: 'schedule/GetBuyerScheduleForBack',\r\n    getExhibitionScheduleForBack: 'schedule/GetExhibitionScheduleForBack',\r\n    getBuyerSchedulesForBack: 'schedule/GetBuyerSchedulesForBack',\r\n    getExhibitionSchedulesForBack: 'schedule/GetExhibitionSchedulesForBack',\r\n    deleteScheduleById: 'schedule/DeleteScheduleById'\r\n});\r\n\r\n\r\nexport default class ViewSchedule {\r\n    constructor(lng) {\r\n\r\n        opg.wrapPanel('#formSchedule', {\r\n            title: ``,\r\n            btnSearchText: `${lng.search}`,\r\n            btnSearchClick: function () {\r\n                //let param = $('#formWishlist').fieldsToJson();\r\n                setApiUrl();\r\n                tb['_api'] = apiUri;\r\n                tb.update({\r\n                    'barcode': barCode.jq.val(),\r\n                    'keyword': name.jq.val()\r\n                });\r\n            },\r\n        });\r\n        let barCode = opg('#barcode2'),\r\n            name = opg('#name2');\r\n        let selType = opg('#type2');\r\n        let apiUri: any;\r\n\r\n        let setApiUrl = function () {\r\n            if (selType.jq.val() == 0) {\r\n                apiUri = api.getBuyerScheduleForBack;\r\n            } else if (selType.jq.val() == 1) {\r\n                apiUri = api.getExhibitionScheduleForBack;\r\n            }\r\n        };\r\n        setApiUrl();\r\n\r\n        let tb: Table = opg('#tbSchedule').table({\r\n            api: apiUri,\r\n            param: {\r\n                'barcode': barCode.jq.val(),\r\n                'keyword': name.jq.val()\r\n            },\r\n            columns: [\r\n                {\r\n                    text: `${lng.barcode}`,\r\n                    src: 'barcode',\r\n                    width: 150,\r\n                },\r\n                {\r\n                    text: `${lng.name}`,\r\n                    src: 'name',\r\n                    width: 150,\r\n                },\r\n                {\r\n                    text: `${lng.company}`,\r\n                    src: 'company',\r\n                },\r\n                {\r\n                    text: `${lng.matchTimes}`,\r\n                    src: 'allcount',\r\n                    width: 150,\r\n                },\r\n                {\r\n                    text: `${lng.status}`,\r\n                    src: 'finished',\r\n                    width: 150,\r\n                },\r\n                {\r\n                    text: `${lng.process}`,\r\n                    src: 'id',\r\n                    width: 120,\r\n                    render: (id, index, row) => {\r\n                        return `<button data-id=\"${row.barcode}\" data-index=\"${row[':index']}\" class=\"btn-mini btn-info btnDetail\">${lng.viewDetail}</button>  `;\r\n                    },\r\n                },\r\n            ]\r\n        });\r\n\r\n\r\n        tb.tbody.on('click', '.btnDetail', function (e) {\r\n            let $tb = $('<table></table>');\r\n            let $divTb = $('<div style=\"height: 353px; overflow-x: hidden; overflow-y: auto;\"></div>').append($tb);\r\n\r\n            opg.popTop($divTb, {\r\n                title: lng.viewDetail,\r\n                width: 700,\r\n                height: 400\r\n            });\r\n\r\n\r\n            let apiUriInfo: any;\r\n            if (selType.jq.val() == 0) {\r\n                apiUriInfo = api.getBuyerSchedulesForBack;\r\n            } else if (selType.jq.val() == 1) {\r\n                apiUriInfo = api.getExhibitionSchedulesForBack;\r\n            }\r\n\r\n            let tb: Table = opg($tb).table({\r\n                api: apiUriInfo,\r\n                param: {\r\n                    barcode: e.target.getAttribute('data-id')\r\n                },\r\n                columns: [\r\n                    {\r\n                        text: `${lng.name}`,\r\n                        src: 'name',\r\n                        width: 120,\r\n                    },\r\n                    {\r\n                        text: `${lng.company}`,\r\n                        src: 'company',\r\n                        width: 200,\r\n                    },\r\n                    {\r\n                        text: `${lng.time}`,\r\n                        render: function (id, index, row) {\r\n                            return `${row.begindate} - ${row.enddate}`;\r\n                        }\r\n                    },\r\n                    {\r\n                        text: `${lng.type}`,\r\n                        render: function (id, index, row) {\r\n                            return lng[`sType${row.type}`];\r\n                        }\r\n                    },\r\n                    {\r\n                        text: `${lng.process}`,\r\n                        render: function (id, index, row) {\r\n                            return `<button data-id=\"${row.scheduleid}\" data-index=\"${row[':index']}\" class=\"btn-mini btn-danger btnDelete\">${lng.delete}</button>  `;\r\n                        }\r\n                    },\r\n                ]\r\n            });\r\n\r\n            tb.tbody.on('click', '.btnDelete', (e) => {\r\n                let scheduleId = e.target.getAttribute('data-id');\r\n                top.opg.confirm(lng.askDeleteSchedule, () => {\r\n                    api.deleteScheduleById({scheduleId}, () => {\r\n                        tb.update()\r\n                    })\r\n                });\r\n            })\r\n        });\r\n\r\n\r\n    }\r\n}"]}