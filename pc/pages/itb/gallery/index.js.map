{"version":3,"sources":["/pages/itb/gallery/index.ts"],"names":[],"mappings":";;;;AAAA,oCAA4B;AAC5B,+CAA4C;AAE5C,gBAAG,CAAC,GAAG,CAAC;IACP,QAAQ,EAAE,4BAA4B;IACtC,iBAAiB,EAAE,yBAAyB;IAC5C,cAAc,EAAE,0BAA0B;CAC1C,CAAC,CAAC;AAEH,IAAM,GAAG,GAAG,qBAAS,CAAC,OAAO,CAAC;AAE9B,IAAI,QAAQ,GAAG,YAAY,CAAC;AAC5B,IAAI,IAAI,GAAG,gBAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;IAC5B,GAAG,EAAE,gBAAG,CAAC,GAAG,CAAC,QAAQ;IACrB,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,8CAAyC,QAAQ,kCAA0B,GAAG,CAAC,IAAI,aAAU;IACnG,GAAG,EAAE,UAAU;IACf,QAAQ,EAAE,iBAAiB;CAG3B,CAAC,CAAC;AACH,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE;IAC9B,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjE,8BAA8B;IAC9B,IAAI,IAAI,EAAE;QACT,iBAAiB,GAAG,EAAE,CAAC;QACvB,UAAU,CAAC,EAAE,CAAC,CAAC;KACf;AACF,CAAC,CAAC,CAAC;AAEH,IAAI,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;AACtB,IAAI,iBAAiB,GAAG,CAAC,CAAC;AAE1B,SAAS,aAAa,CAAC,IAAI;IAC1B,EAAE,CAAC,QAAQ,CAAC;QACX,IAAI,EAAE,IAAI;QACV,UAAU,EAAE;YACX,KAAK,EAAE,WAAC,IAAI,QAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAhC,CAAgC;SAC5C;QACD,QAAQ,EAAE,2IAA2I;KACrJ,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,UAAU,CAAC,MAAM;IACzB,gBAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAC,MAAM,UAAC,EAAE,cAAI,IAAI,oBAAa,CAAC,IAAI,CAAC,EAAnB,CAAmB,CAAC,CAAC;AAClE,CAAC;AAED,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAG9B,EAAE,CAAC,EAAE,CAAC,OAAO,EAAG,QAAQ,EAAG;IAC1B,gBAAG,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAa,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wDAAkD,CAAC,EAAG;QACvG,UAAU,EAAG,IAAI;KACjB,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAGH,IAAI,WAAW,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC;AACpC,CAAC,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IACrB,IAAI,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;IAC9B,IAAI,KAAK;QACR,gBAAG,CAAC,GAAG,CAAC,cAAc,CAAC,EAAC,KAAK,SAAC,EAAE,cAAI,IAAI,oBAAa,CAAC,IAAI,CAAC,EAAnB,CAAmB,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC;AAGH,YAAY;AACZ;;;;;;;GAOG","file":"index.js","sourcesContent":["import opg from 'ts/opg.ts';\r\nimport {Languages} from 'ts/util/Languages';\r\n\r\nopg.api({\r\n\tgetTypes: 'phototype/getallphototypes',\r\n\tgetPhotosByTypeId: 'photo/GetPhotosByTypeId',\r\n\tgetPhotosByTag: 'photo/QueryPhotosByTitle',\r\n});\r\n\r\nconst lpg = Languages.package;\r\n\r\nlet treeName = 'photoTypes';\r\nlet tree = opg('#tree').tree({\r\n\tapi: opg.api.getTypes,\r\n\tname: treeName,\r\n\troot: `<label><input type=\"radio\" name=\"tree_${treeName}Rd\" value=\"0\" checked> ${lpg.root}</label>`,\r\n\tcmd: 'checkOne',\r\n\tchildSrc: 'childPhotoTypes',\r\n\t//onCreate:removeRadioBox,\r\n\t//onUpdate:removeRadioBox,\r\n});\r\ntree.jq.on('change', ':radio', function () {\r\n\tlet elem = $(this), id = elem.val(), deal = elem.prop('checked');\r\n\t//console.warn('deal' , this);\r\n\tif (deal) {\r\n\t\tcurrentCategoryId = id;\r\n\t\tshowPhotos(id);\r\n\t}\r\n});\r\n\r\nlet ul = $('#photos');\r\nlet currentCategoryId = 0;\r\n\r\nfunction bindPhotoList(data){\r\n\tul.bindList({\r\n\t\tlist: data,\r\n\t\titemRender: {\r\n\t\t\tgName: v => v.substr(v.lastIndexOf('/') + 1),\r\n\t\t},\r\n\t\ttemplate: '<li><img class=\"thumb\" src=\"${url}\" alt=\"${title}\"><p><label><input type=\"checkbox\" name=\"photo\" value=\"${id}\"> ${title}</label></p></li>',\r\n\t});\r\n}\r\n\r\nfunction showPhotos(typeid) {\r\n\topg.api.getPhotosByTypeId({typeid}, data => bindPhotoList(data));\r\n}\r\n\r\nshowPhotos(currentCategoryId);\r\n\r\n\r\nul.on('click' , '.thumb' , function () {\r\n\topg.popTop($(`<img src=\"${this.getAttribute('src')}\" style=\"max-width: 1000px; max-height: 700px;\">`) , {\r\n\t\tmodalClose : true\r\n\t});\r\n});\r\n\r\n\r\nlet iptPhotoTag = $('#iptPhotoTag');\r\n$('#btnSearch').click(function () {\r\n\tlet title = iptPhotoTag.val();\r\n\tif (title)\r\n\t\topg.api.getPhotosByTag({title}, data => bindPhotoList(data));\r\n});\r\n\r\n\r\n//防止在第二层添加节点\r\n/*function removeRadioBox() {\r\n\ttree.jq.find(':radio').each((i, elem) => {\r\n\t\tlet sp = $(elem).closest('span');\r\n\t\tif (~~sp.data('depth') === 1) {\r\n\t\t\telem.remove();\r\n\t\t}\r\n\t})\r\n}*/\r\n"]}